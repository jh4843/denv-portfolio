import Head from "next/head"
import Layout from "@/components/layout"
import * as MyType from "@/types"
import ProjectItem from "@/components/projects/project-item"
import { TOKEN, DATABASE_ID } from "../config"

// Client (in Borwser)
export default function Projects({ projects }: { projects: MyType.iProjects }) {
  const resultProjects: MyType.iProjectsResult[] = projects.results

  const projectTitles = resultProjects.map(
    (aProject: MyType.iProjectsResult) => {
      if (
        aProject.properties?.Name.title == undefined ||
        aProject.properties?.Name.title.length < 1
      ) {
        return ""
      } else {
        return aProject.properties?.Name.title[0].plain_text
      }
    },
  )

  console.log(projectTitles)

  return (
    <>
      <Layout>
        <Head>
          <title>Jaehyeok Portfolio</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <h1 className="text-xl font-bold sm:text-2xl">
          총 프로젝트:{" "}
          <span className="pl-2 text-green-800 dark:text-blue-300">
            {projectTitles.length}
          </span>
        </h1>

        <div className="grid grid-cols-1 gap-2 md:grid-cols-3 sm:grid-cols-2 lg:grid-cols-4 w-full">
          {projects.results.map(
            // (aProject: MyType.iProjectsResult, index: number) => (
            (aProject: MyType.iProjectsResult) => (
              //<h1 key={index}>{aProject.properties?.Name.title[0].plain_text}</h1>
              <ProjectItem key={aProject.id} data={aProject}></ProjectItem>
            ),
          )}
        </div>
      </Layout>
    </>
  )
}

// 변경될 때마다 호출하고 싶으면: getServerSideProps

// 처음 빌드타임에 호출 (Server)
export async function getStaticProps() {
  const options = {
    method: "POST",
    headers: {
      accept: "application/json",
      "Notion-Version": "2022-06-28",
      "content-type": "application/json",
      Authorization: `Bearer ${TOKEN}`,
    },
    body: JSON.stringify({
      sorts: [
        {
          property: "Name",
          direction: "descending",
        },
      ],
      page_size: 100,
    }),
  }

  const res = await fetch(
    `https://api.notion.com/v1/databases/${DATABASE_ID}/query`,
    options,
  )
  // .then((response) => response.json())
  // .then((response) => console.log(response))
  // .catch((err) => console.error(err))

  const projects: MyType.iProjects = await res.json()

  const resultProjects: MyType.iProjectsResult[] = projects.results

  const projectIds = resultProjects.map(
    (aProject: MyType.iProjectsResult) => aProject.id,
  )

  const projectTitles = resultProjects.map(
    (aProject: MyType.iProjectsResult) => {
      if (
        aProject.properties?.Name.title == undefined ||
        aProject.properties?.Name.title.length < 1
      ) {
        return ""
      } else {
        return aProject.properties?.Name.title[0].plain_text
      }
    },
  )

  console.log(`Projects IDS: ${projectIds}\nProject Names: ${projectTitles}`)

  return {
    props: { projects }, // will be passed to the page component as props
  }
}
